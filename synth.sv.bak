// Synth module
// Takes input from CPU and generates mono audio samples to send to I2S module

module synth (input logic RESET, CLK, LRCLK, SCLK,
				  input logic [1:0] SW,
				  //input logic PHASE [11:0],			WILL COME FROM CPU
				  output logic [15:0] AUDIO_OUT
				 );

logic SAW;
logic [15:0] SAMPLE, TONE, SAW_INC;
logic [11:0] PHASE; // Temporary
				 
//wavetable WAVE(.CLK(CLK), .RESET(RESET), .ADDR(PHASE), .sample(SAMPLE));

always_ff @ (posedge CLK) begin
	
	if (RESET) begin
		SAW <= 0;
		SAMPLE <= 0;
		TONE <= 0;
		SAW_INC <= 0;
	end
	
	// Generates rough saw wave
	if (16'hFFFF - AUDIO_OUT < 2 * SAW_INC) SAW <= 0;
	else if (AUDIO_OUT < 2 * SAW_INC) SAW <= 1;
	
	// Select saw frequency
	if (SW[1]) begin
		SAW_INC <= 2300;
	end
	else begin
		SAW_INC <= 653;
	end
	
	// Directly connected SAMPLE for testing, TONe will be sent as sum of samples
	// TONE <= SAMPLE;
	
end

always_ff @ (posedge SCLK) begin
	
end

always_ff @ (negedge LRCLK) begin
	
	if (RESET) begin
		AUDIO_OUT <= 0;
		PHASE <= 0;
	end
	
	// Select saw or sine
	if (SW[0]) begin
		if (SAW) begin
			AUDIO_OUT <= (AUDIO_OUT + SAW_INC);
		end
		else begin
			AUDIO_OUT <= (AUDIO_OUT - SAW_INC);
		end
	end
	else begin
		AUDIO_OUT <= SAMPLE;
	end
	
end

endmodule
